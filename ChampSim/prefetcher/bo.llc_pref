#include "bo.h" 
#define DEGREE 2

void CACHE::llc_prefetcher_initialize() 
{
	bo_prefetcher_initialize();
}

uint32_t CACHE::llc_prefetcher_operate(uint64_t addr, uint64_t ip, uint8_t cache_hit, uint8_t type, uint32_t metadata_in, uint64_t instr_id, uint64_t curr_cycle)
{
    if(instr_id == 0)
        return metadata_in;

    vector<uint64_t> bo_candidates;
    bo_prefetcher_operate(addr, ip, cache_hit, type, get_set(addr), get_way(addr, get_set(addr)), DEGREE, bo_candidates);
    for(uint32_t i=0; i<bo_candidates.size(); i++)
        prefetch_line(ip, addr, bo_candidates[i], FILL_LLC, 0);
    return metadata_in;
}

uint32_t CACHE::llc_prefetcher_cache_fill(uint64_t addr, uint32_t set, uint32_t way, uint8_t prefetch, uint64_t evicted_addr, uint32_t metadata_in)
{
    bo_prefetcher_cache_fill(addr, set, way, prefetch, evicted_addr);
    return metadata_in;
}

void CACHE::llc_prefetcher_final_stats()
{
	bo_prefetcher_final_stats();
}
